
    id:1,
    name:"1xx 信息",
    desc:"这一组状态码表明这是一个临时性响应。此响应仅由状态行和可选的HTTP头组成，以一个空行结尾。由于HTTP／1.0未定义任何1xx状态码，所以不要向HTTP／1.0客户端发送1xx响应。",


        code:100,
        status:"Continue",
        info:"客户端应当继续进行请求。此时服务器已经收到客户端请求的初始部分，而且也没有关闭连接，客户端应该继续发送请求的剩余部分。不过如果请求已经发送完毕，客户端会直接忽略此响应。服务器要在请求完成时发送一个最终响应。"


        code:101,
        status:"Switching Protocols",
        info:"服务器已经理解了客户端的请求，并将通过Upgrade消息头通知客户端采用不同的协议来完成这个请求。在发送完这个响应最后的空行后，服务器将会切换到在Upgrade消息头中定义的那些协议。\n只有在切换新的协议更有好处的时候才应该采取类似措施。例如，切换到新的HTTP版本（如HTTP／2）比旧版本更有优势，或者切换到一个实时且同步的协议（如WebSocket）以传送利用此类特性的资源。"


        code:102,
        status:"Processing",
        info:"由WebDAV（RFC 2518）扩展的状态码，代表处理将被继续执行。"


    id:2,
    name:"2xx 成功",
    desc:"这一组状态码表明客户端的请求已经被成功接收并正确解析。",


        code:200,
        status:"OK",
        info:"请求成功。"


        code:201,
        status:"Created",
        info:"请求已经被实现，而且成功创建一个新资源，其URI在返回的Location头信息中。如果需要的资源无法及时建立，应当返回 202 Accepted。"


        code:202,
        status:"Accepted",
        info:"服务器已接受请求，但尚未处理。正如它可能被拒绝一样，最终该请求可能会也可能不会被执行。适用于异步操作场合，允许服务器接受其他过程请求，而不用让客户端一直保持与服务器的连接知道批处理操作全部完成。\n在接受请求处理并返回202状态码的响应应当在返回的实体中包含一些指示处理当前状态的信息，以及指向处理状态监视器或状态预测的指针，以便用户能够估计操作是否已经完成。"


        code:203,
        status:"Non-Authoritative Information",
        info:"服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝。当前的信息可能是原始版本的子集或者超集。使用此状态码不是必须的。"


        code:204,
        status:"No Content",
        info:"服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息。响应可能通过实体头部的形式，返回新的或更新后的元信息。如果存在这些头部信息，则应当与所请求的变量相呼应。\n由于204响应被禁止包含任何消息体，因此它始终以消息头后的第一个空行结尾。"


        code:205,
        status:"Reset Content",
        info:"服务器成功处理了请求，且没有返回任何内容。但是与204响应不同，返回此状态码的响应要求请求者重置文档视图。该响应主要是被用于接受用户输入后，立即重置表单，以便用户能够轻松地开始另一次输入。\n与204响应一样，该响应也被禁止包含任何消息体，且以消息头后的第一个空行结束。"


        code:206,
        status:"Partial Content",
        info:"服务器已经成功处理了部分GET请求。类似于迅雷这类的HTTP下载工具都是使用此类响应实现断点续传或者将一个大文档分解为多个下载段同时下载。该请求必须包含Range头信息来指示客户端希望得到的内容范围，并且可能包含If-Range来作为请求条件。"


        code:207,
        status:"Multi-Status",
        info:"由WebDAV(RFC 2518)扩展的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。"


        code:208,
        status:"Already Reported",
        info:"DAV绑定的成员列表已经包含在前一个响应中，并且不会再次发送。(WebDAV; RFC 5842)"


        code:226,
        status:"IM Used",
        info:"服务器已经完成对资源的一个响应。此响应代表了可用于当前实例的一个或多个操作的结果。(RFC 3229)"
 


    id:3,
    name:"3xx 重定向",
    desc:"这一组状态码表示客户端需要采取更进一步的行动来完成请求。通常，这些状态码用来重定向，后续的请求地址（重定向目标）在本次响应的Location域中指明。",


        code:300,
        status:"Multiple Choices",
        info:"被请求的资源有一系列可供选择的回馈信息，每个都有自己特定的地址和浏览器驱动的商议信息。用户或浏览器能够自行选择一个首选的地址进行重定向。"


        code:301,
        status:"Moved Permanently",
        info:"被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个URI之一。如果可能，拥有链接编辑功能的客户端应当自动把请求的地址修改为从服务器反馈回来的地址。"


        code:302,
        status:"Found",
        info:"请求的资源现在临时从不同的URI响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。\n注意：虽然RFC 1945和RFC 2068规范不允许客户端在重定向时改变请求的方法，但是很多现存的浏览器将302响应视作为303响应，并且使用GET方式访问在Location中规定的URI，而无视原先请求的方法。状态码303和307被添加了进来，用以明确服务器期待客户端进行何种反应。"


        code:303,
        status:"See Other",
        info:"对应当前请求的响应可以在另一个URI上被找到，而且客户端应当采用GET的方式访问那个资源。这个方法的存在主要是为了允许由脚本激活的POST请求输出重定向到一个新的资源。这个新的URI不是原始资源的替代引用。\n注意：许多HTTP/1.1版以前的浏览器不能正确理解303状态。如果需要考虑与这些浏览器之间的互动，302状态码应该可以胜任，因为大多数的浏览器处理302响应时的方式恰恰就是上述规范要求客户端处理303响应时应当做的。"


        code:304,
        status:"Not Modified",
        info:"如果客户端发送了一个带条件的GET请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304响应禁止包含消息体，因此始终以消息头后的第一个空行结尾。该响应必须包含以下头信息：Date、ETag、Content-Location、Expires、Cache-Control、Vary。"


        code:305,
        status:"Use Proxy",
        info:"被请求的资源必须通过指定的代理才能被访问。Location域中将给出指定的代理所在的URI信息，接收者需要重复发送一个单独的请求，通过这个代理才能访问相应资源。只有原始服务器才能建立305响应。\n注意：RFC 2068中没有明确305响应是为了重定向一个单独的请求，而且只能被原始服务器建立。忽视这些限制可能导致严重的安全后果。"


        code:306,
        status:"Switch Proxy",
        info:"在最新版的规范中，306状态码已经不再被使用。"


        code:307,
        status:"Temporary Redirect",
        info:"请求的资源现在临时从不同的URI响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。"


        code:308,
        status:"Permanent Redirect",
        info:"当前及未来的请求应该使用其他URI。307、308响应与302、301相似，但是不允许改变HTTP方法。(RFC 7538)"



    id:4,
    name:"4xx 客户端错误",
    desc:"这一组状态码表示客户端的请求存在错误，导致服务器无法处理。除非响应的是一个HEAD请求，否则服务器就应该返回一个解释当前错误状况的实体，以及这是临时的还是永久性的状况。这些状态码适用于任何请求方法。浏览器应当向用户显示任何包含在此类错误响应中的实体内容。",


        code:400,
        status:"Bad Request",
        info:"请求包含语法错误。除非进行修改，否则客户端不应该重复提交这个请求。"


        code:401,
        status:"Unauthorized",
        info:"当前请求需要用户验证。该响应必须包含一个适用于被请求资源的WWW-Authenticate信息头用以询问用户信息。客户端可以重复提交一个包含恰当的Authorization头信息的请求。如果当前请求已经包含了Authorization证书，那么401响应代表着服务器验证已经拒绝了那些证书。如果401响应包含了与前一个响应相同的身份验证询问，且浏览器已经至少尝试了一次验证，那么浏览器应当向用户展示响应中包含的实体信息，因为这个实体信息中可能包含了相关诊断信息。参见RFC 2617。"


        code:402,
        status:"Payment Required",
        info:"是为了将来可能的需求而预留的。"


        code:403,
        status:"Forbidden",
        info:"服务器已经理解请求，但是拒绝执行它。与401响应不同的是，身份验证并不能提供任何帮助，而且这个请求也不应该被重复提交。如果这不是一个HEAD请求，而且服务器希望能够讲清楚为何请求不能被执行，那么就应该在实体内描述拒绝的原因。当然服务器也可以返回一个404响应，假如它不希望让客户端获得任何信息。"


        code:404,
        status:"Not Found",
        info:"请求失败，请求所希望得到的资源未被在服务器上发现。没有信息能够告诉用户这个状况到底是暂时的还是永久的。404这个状态码被广泛应用于当服务器不想揭示到底为何请求被拒绝或者没有其他适合的响应可用的情况下。"


        code:405,
        status:"Method Not Allowed",
        info:"请求行中指定的请求方法不能被用于请求相应的资源。该响应必须返回一个Allow头信息用以表示出当前资源能够接受的请求方法的列表。\n鉴于PUT，DELETE方法会对服务器上的资源进行写操作，因而绝大部分的网页服务器都不支持或者在默认配置下不允许上述请求方法，对于此类请求均会返回405错误。"


        code:406,
        status:"Not Acceptable",
        info:"请求的资源的内容特性无法满足请求头中的条件，因而无法生成响应实体。"


        code:407,
        status:"Proxy Authentication Required",
        info:"与401响应类似，只不过客户端必须在代理服务器上进行身份验证。代理服务器必须返回一个Proxy-Authenticate用以进行身份询问。客户端可以返回一个Proxy-Authorization信息头用以验证。参见RFC 2617。"


        code:408,
        status:"Request Timeout",
        info:"请求超时。客户端没有在服务器预备等待的时间内完成一个请求的发送。客户端可以随时再次提交这一请求而无需进行任何更改。"


        code:409,
        status:"Conflict",
        info:"由于和被请求的资源的当前状态之间存在冲突，请求无法完成。这个代码只允许用在这样的情况下才能被使用：用户被认为能够解决冲突，并且会重新提交新的请求。该响应应当包含足够的信息以便用户发现冲突的源头。"


        code:410,
        status:"Gone",
        info:"被请求的资源在服务器上已经不再可用，而且没有任何已知的转发地址。这样的状况应当被认为是永久性的。如果可能，拥有链接编辑功能的客户端应当在获得用户许可后删除所有指向这个地址的引用。如果服务器不知道或者无法确定这个状况是否是永久的，那么就应该使用404状态码。"


        code:411,
        status:"Length Required",
        info:"服务器拒绝在没有定义Content-Length头的情况下接受请求。在添加了表明请求消息体长度的有效Content-Length头之后，客户端可以再次提交该请求。"


        code:412,
        status:"Precondition Failed",
        info:"服务器在验证在请求的头字段中给出先决条件时，没能满足其中的一个或多个。这个状态码允许客户端在获取资源时在请求的元信息（请求头字段数据）中设置先决条件，以此避免该请求方法被应用到其希望的内容以外的资源上。"


        code:413,
        status:"Payload Too Large",
        info:"旧称“Request Entity Too Large”。服务器拒绝处理当前请求，因为该请求提交的实体数据大小超过了服务器愿意或者能够处理的范围。此种情况下，服务器可以关闭连接以免客户端继续发送此请求。如果这个状况是临时的，服务器应当返回一个Retry-After的响应头，以告知客户端可以在多少时间以后重新尝试。"


        code:414,
        status:"Request-URI Too Long",
        info:"请求的URI长度超过了服务器能够解释的长度，因此服务器拒绝对该请求提供服务。"


        code:415,
        status:"Unsupported Media Type",
        info:"请求中提交的实体并不是服务器中所支持的格式，因此请求被拒绝。"


        code:416,
        status:"Range Not Satisfiable",
        info:"旧称“Requested Range Not Satisfiable”。如果请求中包含了Range请求头，并且Range中指定的任何数据范围都与当前资源的可用范围不重合，同时请求中又没有定义If-Range请求头，那么服务器就应当返回416状态码，同时包含一个Content-Range实体头，用以指明当前资源的长度。这个响应也被禁止使用multipart/byteranges作为其Content-Type。"


        code:417,
        status:"Expectation Failed",
        info:"在请求头Expect中指定的预期内容无法被服务器满足，或者这个服务器是一个代理服务器，它有明显的证据证明在当前路由的下一个节点上，Expect的内容无法被满足。"


        code:418,
        status:"I'm a teapot",
        info:"本操作码是在1998年作为IETF的传统愚人节笑话, 在RFC 2324 超文本咖啡壶控制协议中定义的，并不需要在真实的HTTP服务器中定义。:)"


        code:421,
        status:"There are too many connections from your internet address",
        info:"从当前客户端所在的IP地址到服务器的连接数超过了服务器许可的最大范围。通常，此处的IP地址指的是从服务器上看到的客户端地址（比如用户的网关或者代理服务器地址）。"


        code:422,
        status:"Unprocessable Entity",
        info:"请求格式正确，但是由于含有语义错误，无法响应。（RFC 4918 WebDAV）"


        code:423,
        status:"Locked",
        info:"当前资源被锁定。（RFC 4918 WebDAV）"


        code:424,
        status:"Failed Dependency",
        info:"由于之前的某个请求发生的错误，导致当前请求失败，例如PROPPATCH。（RFC 4918 WebDAV）"


        code:425,
        status:"Unordered Collection",
        info:"在WebDav Advanced Collections草案中定义，但是未出现在《WebDAV顺序集协议》（RFC 3658）中。"


        code:426,
        status:"Upgrade Required",
        info:"客户端应当切换到TLS/1.0。（RFC 2817）"


        code:428,
        status:"Precondition Required",
        info:"服务器要求请求必须带上条件。(RFC 6585)"


        code:429,
        status:"Too Many Requests",
        info:"用户在一段给定的时间内发送过多的请求。(RFC 6585)"


        code:431,
        status:"Request Header Fields Too Large",
        info:"服务器不能处理请求，因为请求的单一请求头或请求头整体过大。(RFC 6585)"


        code:449,
        status:"Retry With",
        info:"由微软扩展，代表请求应当在执行完适当的操作后进行重试。"


        code:451,
        status:"Unavailable For Legal Reasons",
        info:"（由IETF在2015核准后新增加）该访问因法律的要求而被拒絕。"


        code:499,
        status:"Client Closed Request",
        info:"nginx使用非标准状态码。表明当nginx正在处理请求时，客户端关闭了连接。"



    id:5,
    name:"5xx 服务器错误",
    desc:"这一组状态码说明服务器在处理请求的过程中有错误或者异常状态发生，也有可能是服务器意识到以当前的软硬件资源无法完成对请求的处理。除非这是一个HEAD请求，否则服务器应当包含一个解释当前错误状态以及这个状况是临时的还是永久的解释信息实体。浏览器应当向用户展示任何在当前响应中被包含的实体。",


        code:500,
        status:"Internal Server Error",
        info:"服务器程序错误，导致了它无法完成对请求的处理。"


        code:501,
        status:"Not Implemented",
        info:"服务器不支持当前请求所需要的某个功能。当服务器无法识别请求的方法，并且无法支持其对任何资源的请求。"


        code:502,
        status:"Bad Gateway",
        info:"作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应。"


        code:503,
        status:"Service Unavailable",
        info:"由于临时的服务器维护或者过载，服务器当前无法处理请求。这个状况是临时的，并且将在一段时间以后恢复。如果能够预计延迟时间，那么响应中可以包含一个Retry-After头用以标明这个延迟时间。如果没有给出这个Retry-After信息，那么客户端应当以处理500响应的方式处理它。"


        code:504,
        status:"Gateway Timeout",
        info:"作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器（URI标识出的服务器，例如HTTP、FTP、LDAP）或者辅助服务器（例如DNS）收到响应。注意：某些代理服务器在DNS查询超时时会返回400或者500错误。"


        code:505,
        status:"HTTP Version Not Supported",
        info:"服务器不支持，或者拒绝支持在请求中使用的HTTP版本。这说明服务器不能或不愿使用与客户端相同的版本。响应中应当包含一个描述了为何版本不被支持以及服务器支持哪些协议的实体。"


        code:506,
        status:"Variant Also Negotiates",
        info:"由《透明内容协商协议》（RFC 2295）扩展，代表服务器存在内部配置错误：被请求的协商变元资源被配置为在透明内容协商中使用自己，因此在一个协商处理中不是一个合适的重点。"


        code:507,
        status:"Insufficient Storage",
        info:"服务器无法存储完成请求所必须的内容。这个状况被认为是临时的。（WebDAV RFC 4918）"


        code:508,
        status:"Loop Detected",
        info:"服务器终止操作，因为在处理带有“Depth:infinity”请求时遇到一个无限循环。这表示着整个操作的失败。(RFC 5842)"


        code:509,
        status:"Bandwidth Limit Exceeded",
        info:"服务器达到带宽限制。"


        code:510,
        status:"Not Extended",
        info:"获取资源所需要的策略并没有被满足。（RFC 2774）"


        code:511,
        status:"Network Authentication Required",
        info:"客户端需要经过验证以获得网络连接许可（RFC 6585）"


        code:599,
        status:"Network Connect Timeout Error",
        info:"这个状态码还没有被任何RFC定义，但是已经被一些HTTP代理用来表示客户端网络连接超时的状态。"

